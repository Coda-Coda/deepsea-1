type addr := int

object signature OS = {
  initialize : int * int -> unit;
  hasOwner : unit -> unit;
  hasSupply : int -> unit;
}

type Token = {
  totalSupply : int;
  owner : addr
}

object O : OS {
  let token : Token := { totalSupply=0; owner=0 }

  let initialize (_totalSupply, _owner) = 
    token.totalSupply := _totalSupply;
    token.owner := _owner;
    ()

  let hasOwner () =
    let _owner = token.owner in
      assert (_owner <> 0)

  let hasSupply (amount) =
    let _totalSupply = token.totalSupply in
      assert (_totalSupply >= amount)
  
}

layer L = {
  o = O
}

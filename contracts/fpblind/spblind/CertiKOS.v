(* WARNING: This file is generated by Edsger, the DeepSEA compiler.
            All modification will be lost when regenerating. *)
(* Module spblind.CertiKOS for spblind.ds *)
Require Import BinPos.
Require Import DeepSpec.Runtime.
Require Import spblind.EdsgerIdents.
Require Import spblind.DataTypes.
Require Import spblind.DataTypeOps.
Require Import spblind.DataTypeProofs.

Section EdsgerGen.


Require Import compcert.lib.Coqlib.
Require Import liblayers.lib.Decision.
Require Import liblayers.compcertx.ErrorMonad.
Require Import liblayers.compcertx.MakeProgram.
Require Import compcertx.common.MemimplX.
Require Import liblayers.compcertx.MakeProgramImpl.
Require Import liblayers.compat.CompatLayers.
Require Import mcertikos.layerlib.LAsmModuleSemDef.
Require Import mcertikos.layerlib.CompCertiKOS.

Local Instance mwd_ops: MemWithData.UseMemWithData Memimpl.mem.

Require Import spblind.LayerEVMOPCODE.
Require Import spblind.LayerBLINDAUCTION.

Definition EVMOpcode_transfer_core := (@EVMOpcode_transfer Memimpl.mem memory_model_ops _ _ make_program_ops make_program_prf).
Definition EVMOpcode_transfer_func := (synth_func_func EVMOpcode_transfer_core).

Definition EVMOPCODE_impl : res LAsm.module := 
  ret (∅).

Definition BlindAuction_initialize_core := (@BlindAuction_initialize Memimpl.mem memory_model_ops _ _ make_program_ops make_program_prf).
Definition BlindAuction_initialize_func := (synth_func_func BlindAuction_initialize_core).

Definition BlindAuction_transferb_core := (@BlindAuction_transferb Memimpl.mem memory_model_ops _ _ make_program_ops make_program_prf).
Definition BlindAuction_transferb_func := (synth_func_func BlindAuction_transferb_core).

Definition BlindAuction_reveal_core := (@BlindAuction_reveal Memimpl.mem memory_model_ops _ _ make_program_ops make_program_prf).
Definition BlindAuction_reveal_func := (synth_func_func BlindAuction_reveal_core).

Definition BlindAuction_bid_core := (@BlindAuction_bid Memimpl.mem memory_model_ops _ _ make_program_ops make_program_prf).
Definition BlindAuction_bid_func := (synth_func_func BlindAuction_bid_core).

Definition BlindAuction_withdraw_core := (@BlindAuction_withdraw Memimpl.mem memory_model_ops _ _ make_program_ops make_program_prf).
Definition BlindAuction_withdraw_func := (synth_func_func BlindAuction_withdraw_core).

Definition BlindAuction_auctionEnd_core := (@BlindAuction_auctionEnd Memimpl.mem memory_model_ops _ _ make_program_ops make_program_prf).
Definition BlindAuction_auctionEnd_func := (synth_func_func BlindAuction_auctionEnd_core).

Definition BLINDAUCTION_impl : res LAsm.module := 
  M_BlindAuction_initialize <- CompCertiKOS.transf_module (ident_BlindAuction_initialize ↦ BlindAuction_initialize_func);
  M_BlindAuction_transferb <- CompCertiKOS.transf_module (ident_BlindAuction_transferb ↦ BlindAuction_transferb_func);
  M_BlindAuction_reveal <- CompCertiKOS.transf_module (ident_BlindAuction_reveal ↦ BlindAuction_reveal_func);
  M_BlindAuction_bid <- CompCertiKOS.transf_module (ident_BlindAuction_bid ↦ BlindAuction_bid_func);
  M_BlindAuction_withdraw <- CompCertiKOS.transf_module (ident_BlindAuction_withdraw ↦ BlindAuction_withdraw_func);
  M_BlindAuction_auctionEnd <- CompCertiKOS.transf_module (ident_BlindAuction_auctionEnd ↦ BlindAuction_auctionEnd_func);
  ret (var_BlindAuction__beneficiary_ident ↦ BlindAuction__beneficiary_globvar ⊕ var_BlindAuction__biddingEnd_ident ↦ BlindAuction__biddingEnd_globvar ⊕ var_BlindAuction__revealEnd_ident ↦ BlindAuction__revealEnd_globvar ⊕ var_BlindAuction__ended_ident ↦ BlindAuction__ended_globvar ⊕ var_BlindAuction__bids_ident ↦ BlindAuction__bids_globvar ⊕ var_BlindAuction__highestBidder_ident ↦ BlindAuction__highestBidder_globvar ⊕ var_BlindAuction__highestBid_ident ↦ BlindAuction__highestBid_globvar ⊕ var_BlindAuction__secondBid_ident ↦ BlindAuction__secondBid_globvar ⊕ var_BlindAuction__revealed_ident ↦ BlindAuction__revealed_globvar ⊕ var_BlindAuction__amountOf_ident ↦ BlindAuction__amountOf_globvar ⊕   M_BlindAuction_initialize  ⊕   M_BlindAuction_transferb  ⊕   M_BlindAuction_reveal  ⊕   M_BlindAuction_bid  ⊕   M_BlindAuction_withdraw  ⊕   M_BlindAuction_auctionEnd  ⊕ ∅).

Definition certikos := 
  MEVMOPCODE <- EVMOPCODE_impl;
  MBLINDAUCTION <- BLINDAUCTION_impl;
  ret ( MEVMOPCODE ⊕ MBLINDAUCTION ⊕ ∅).


End EdsgerGen.
